version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - postgres 
      - nodejs
    networks:
      - public_network
      - private_network

  # Node.js application
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:123@postgres:5432/testdb
    depends_on:
      - postgres    
    networks:
      - private_network
    ports:
      - "8080:8080"
    command: ["sh", "-c", "sleep 10 && npm start"]

  # PostgreSQL database
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - private_network
    ports:
      - "5432:5432"

networks:
  public_network:
    driver: bridge
  private_network:
    driver: bridge

volumes:
  pgdata: